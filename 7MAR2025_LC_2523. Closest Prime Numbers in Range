class Solution {
public:
    bool isPrime(int n) {
        if (n < 2) return false;
        if (n == 2 || n == 3) return true;
        if (n % 2 == 0) return false;
        for (int i = 3; i * i <= n; i += 2) {
            if (n % i == 0) return false;
        }
        return true;
    }
    vector<int> closestPrimes(int left, int right) {
         vector<int> primes;
         vector<int> result = {-1,-1};
         int mdiff = INT_MAX;

         for(int i=left;i<=right;i++){
            if(isPrime(i)){
                primes.push_back(i);
            }
         }
         if (primes.size() < 2) return result;

         for(int i=1;i<primes.size();i++){
                  int diff = primes[i] - primes[i-1];
                  if(mdiff>diff){
                    mdiff = diff;
                    result = {primes[i-1],primes[i]};

                  }
         }
     return result;
    }
};
